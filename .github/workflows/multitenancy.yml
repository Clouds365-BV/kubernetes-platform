name: Deploy multitenant k8s

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: Name of the project
        required: true
        default: multi
      location:
        description: Azure region for deployment
        required: true
        default: northeurope
  push:
    branches:
      - main
    paths:
      - .github/workflows/multitenancy.yml
      - terraform-multitenancy/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/multitenancy.yml
      - terraform-multitenancy/**

jobs:
  select-environment:
    name: Select Environment
    runs-on: ubuntu-latest
    outputs:
      selected-environment: "${{ steps.set-env.outputs.environment }}"
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "Environment: production"
            echo "environment=prd" >> "$GITHUB_OUTPUT"
          else
            echo "Environment: development"
            echo "environment=dev" >> "$GITHUB_OUTPUT"
          fi

  validate-infra:
    name: Validate Infrastructure
    needs:
      - select-environment
    uses: ./.github/workflows/terraform-validate.yml
    with:
      working_directory: "${{ github.workspace }}/terraform-multitenancy"
      backend_key: "${{ github.event.inputs.project_name }}-${{ needs.select-environment.outputs.selected-environment }}-${{ github.event.inputs.location }}.tfstate"
    secrets:
      AZURE_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      AZURE_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      AZURE_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      AZURE_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"

  infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs:
      - select-environment
      - validate-infra
    env:
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      PROJECT_WORKING_DIR: "${{ github.workspace }}/terraform-multitenancy"
      PROJECT_NAME: "${{ github.event.inputs.project_name }}"
      LOCATION: "${{ github.event.inputs.location }}"
      SELECTED_ENVIRONMENT: "${{ needs.select-environment.outputs.selected-environment }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init
        run: >
          terraform init
          -input=false
          -backend-config="subscription_id=$ARM_SUBSCRIPTION_ID"
          -backend-config="resource_group_name=clouds365"
          -backend-config="storage_account_name=clouds365"
          -backend-config="container_name=tfstate"
          -backend-config="key=${PROJECT_NAME}-${SELECTED_ENVIRONMENT}-${LOCATION}.tfstate"
        working-directory: "${{ env.PROJECT_WORKING_DIR }}"

      - name: Terraform Plan
        run: >
          terraform plan
          -input=false
          --var="project_name=${PROJECT_NAME}"
          --var="location=${LOCATION}"
          --var-file="${SELECTED_ENVIRONMENT}/${LOCATION}.tfvars"
          -out=tfplan
        working-directory: "${{ env.PROJECT_WORKING_DIR }}"

      - name: Terraform Apply
        #if: github.ref_name == 'main'
        run: >
          terraform apply
          -input=false
          tfplan
        working-directory: "${{ env.PROJECT_WORKING_DIR }}"
