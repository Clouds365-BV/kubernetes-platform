on:
  push:
    branches:
      - main
    changes:
      - .github/workflows/infrastructure.yml
      - terraform/**
  pull_request:
    branches:
      - main
    changes:
      - .github/workflows/infrastructure.yml
      - terraform/**

jobs:
  terraform:
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Select environment
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "production"
            echo "selected-environment=prd" >> "$GITHUB_ENV"
          else
            echo "development"
            echo "selected-environment=dev" >> "$GITHUB_ENV"
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      #- name: Checkov GitHub Action
      #  continue-on-error: true
      #  uses: bridgecrewio/checkov-action@v12
      #  with:
      #    output_format: cli
      #    output_file_path: console
      #    quiet: true
      #    soft_fail: true
      #    directory: terraform/

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./terraform

      - name: az login
        env:
          ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
        run: |
          az login \
          --service-principal \
          --username $ARM_CLIENT_ID \
          --password $ARM_CLIENT_SECRET \
          --tenant $ARM_TENANT_ID
          
          az account set \
          --subscription $ARM_SUBSCRIPTION_ID
          
          az aks get-credentials \
          --resource-group drone-dev-ne-rg \
          --name drone-dev-ne-k8s \
          --overwrite-existing
          
          #kubelogin convert-kubeconfig -l azurecli

      - name: Terraform Init
        run: >
          terraform init
          -input=false
          -backend-config="subscription_id=${{secrets.AZURE_SUBSCRIPTION_ID}}"
          -backend-config="resource_group_name=terraform"
          -backend-config="storage_account_name=ncterraform"
          -backend-config="container_name=state"
          -backend-config="key=drone-${{env.selected-environment}}-northeurope.tfstate"
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: >
          terraform plan
          -input=false
          --var="project_name=drone"
          --var="location=northeurope"
          --var-file="./${{env.selected-environment}}-northeurope.json"
          -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        run: >
          terraform apply
          -input=false
          tfplan
        working-directory: ./terraform
