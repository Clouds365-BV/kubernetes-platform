name: Terraform Validation

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
        description: "The directory containing Terraform files to validate"
      backend_key:
        required: true
        type: string
        description: "The state file key"
    secrets:
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      TF_BACKEND_SUBSCRIPTION_ID:
        required: true

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    env:
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      TF_BACKEND_SUBSCRIPTION_ID: "${{ secrets.TF_BACKEND_SUBSCRIPTION_ID }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Checkov GitHub Action
        continue-on-error: true
        uses: bridgecrewio/checkov-action@v12
        with:
          output_format: cli
          output_file_path: console
          quiet: true
          soft_fail: true
          directory: "${{ inputs.working_directory }}"

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: "${{ inputs.working_directory }}"

      - name: Terraform Init
        env:
          ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
        run: >
          terraform init
          -input=false
          -backend-config="subscription_id=$TF_BACKEND_SUBSCRIPTION_ID"
          -backend-config="resource_group_name=clouds365"
          -backend-config="storage_account_name=clouds365"
          -backend-config="container_name=tfstate"
          -backend-config="key=${{ inputs.backend_key }}"
        working-directory: "${{ inputs.working_directory }}"

      - name: Terraform Validate
        run: terraform validate
        working-directory: "${{ inputs.working_directory }}"
